# main.py

import csv
import json
import re
import os
import pandas as pd
from prompts import field_extraction_prompt
from utils import load_config, call_openai_api

# Configuration
openai_config = load_config()
model = openai_config['gpt_models']['model_gpt4o']
input_file = 'medicaldata.csv'
structured_output_file = 'output/structured_data.json'
structured_results = []

def clean_json_response(response: str):
    """Clean JSON response from OpenAI API"""
    if not response or not isinstance(response, str):
        return ""
    cleaned = re.sub(r'```(?:json)?\n?|\n?```', '', response).strip()
    cleaned = cleaned.replace('\n', ' ')
    return cleaned

# Read input data
df = pd.read_csv(input_file, encoding='utf-8')

for index, row in df.iterrows():
    title = row.get('title', '')
    text = row.get('text', '')

    if not text.strip():
        continue

    prompt = field_extraction_prompt(text)
    response = call_openai_api(prompt, model)
    cleaned = clean_json_response(response)

    try:
        structured_data = json.loads(cleaned)
        structured_data["document_title"] = title
        structured_results.append(structured_data)
    except json.JSONDecodeError:
        print(f"Failed to parse JSON for row {index}")

os.makedirs('output', exist_ok=True)
with open(structured_output_file, 'w', encoding='utf-8') as f:
    json.dump(structured_results, f, indent=2)
